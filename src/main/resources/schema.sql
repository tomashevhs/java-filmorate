DROP TABLE IF EXISTS genre CASCADE;
DROP TABLE IF EXISTS rating_MPA CASCADE;
DROP TABLE IF EXISTS users CASCADE;
DROP TABLE IF EXISTS film CASCADE;
DROP TABLE IF EXISTS film_genres CASCADE;
DROP TABLE IF EXISTS friendship CASCADE;
DROP TABLE IF EXISTS film_like CASCADE;

CREATE TABLE IF NOT EXISTS rating_MPA (
rating_MPA_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
rating_MPA_name VARCHAR NOT NULL
);

CREATE TABLE IF NOT EXISTS film (
film_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
film_name VARCHAR NOT NULL,
film_description VARCHAR(200),
film_release_date DATE NOT NULL,
film_duration INTEGER NOT NULL,
film_rating_MPA_id INTEGER REFERENCES rating_MPA (rating_MPA_id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS genre (
genre_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
genre_name VARCHAR NOT NULL
);

CREATE TABLE IF NOT EXISTS film_genres (
film_id INTEGER REFERENCES film (film_id) ON DELETE CASCADE NOT NULL,
genre_id INTEGER REFERENCES genre (genre_id) ON DELETE CASCADE NOT NULL,
PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS users (
user_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY NOT NULL,
user_email VARCHAR UNIQUE NOT NULL,
user_name VARCHAR NOT NULL,
user_login VARCHAR UNIQUE NOT NULL,
user_birthday DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS film_like (
film_id INTEGER REFERENCES film (film_id) ON DELETE CASCADE,
user_id INTEGER REFERENCES users (user_id) ON DELETE CASCADE,
PRIMARY KEY (film_id, user_id)
);

CREATE TABLE IF NOT EXISTS friendship (
user_id INTEGER REFERENCES users (user_id) ON DELETE CASCADE NOT NULL,
friend_id INTEGER REFERENCES users (user_id) ON DELETE CASCADE NOT NULL,
PRIMARY KEY (user_id, friend_id)
);